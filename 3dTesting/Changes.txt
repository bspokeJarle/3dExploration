Changes in this version:
Optimize CrashDetection
	Done, first iteration
CrashDetection impact objects
	Objects get information about the impact - first iteration
	Particles change direction when they hit things - Done - first iteration
	Objects get information about the impact - first iteration
	Debug mode for CrashBoxes, show wireframe of the boxes
Start developing a physics engine
	First iteration - First iteration done
	We can now have particles that bounce of the surface - Done first iteration
	Need to add more physics to the particles - First iteration done
	We can add physics to all objects - First iteration done
Optimize ParticleSystem
	Done, first iteration
Optimize DeepCopy
	Only copy the objects we see - Done
Bee able to set objects on the map in a Scene, for instance trees, rocks, houses etc
	Got a house and a tree placed on the map - Done
	We need to be able to procedurally place them according to a set of rules - First iteration done
As a POC start development of ship movement
	Got some issues with flipping av ship - Fixed
	Movement of surface is not natural or fluid - Fixed
Generate a surface
	Done, first version
	Currently some issues with the surface, to much static noise and not enough natural land and water - Fixed
	Landing area must be able to land on - Work in progress
	Lading area must be in the middle of the map - Work in progress
Start development of a particle system
	Done, first version
	We can have particles on all objects moving towards a point
	Need to start to apply physics, get them to bounce of the surface - Work in progress
Enable Crash detection
	Done, first version - Done

Done:
	- Need to look at converting to .net 8 - supposed to be faster
	- Important next step - Done
	- FPS overlay and other debug info
	- Done, first version
	- Bug here now, needs to be fixed - Done
	- Design ground objects
	- Trees - First done
	- House - First done
	- Design main ship
	- When we reach the end of the map we now wrap around to the other side
	- Generate a screen full at the edges, so we can wrap around
	- Check the position of the ship and if we are at the edge, reset the position to the other side
	- Map overlay on screen
	- Refactor whole project to make it more suited for game development
	- Game AI and Control is now in a separate project
	- Start development of ship movement
	- Design main ship
	- Design ground objects
	- Generate a surface
	- Start development of a particle system
	- Enable Crash detection
	- Clean up MainLoop, make more profesional
	- Speed up rendering, we need 50-60 fps
	- Map overlay on screen
	- FPS overlay and other debug info
	- Add color to objects and shading
	- Start development of a scene setup
	- Bee able to set objects on the map in a Scene, for instance trees, rocks, houses etc